.widget--toc {
	background-color: var(--card-background);
	border-radius: var(--card-border-radius);
	box-shadow: var(--shadow-l1);
	display: flex;
	flex-direction: column;
	color: var(--card-text-color-main);
	overflow: hidden;

	::-webkit-scrollbar-thumb {
		background-color: var(--card-separator-color);
	}

	#TableOfContents {
		overflow-x: auto;
		max-height: 75vh;

		ol,
		ul {
			margin: 0;
			padding: 0;
		}

		ol {
			list-style-type: none;
			counter-reset: item;

			li a:first-of-type::before {
				counter-increment: item;
				content: counters(item, '.') '. ';
				font-weight: bold;
				margin-right: 5px;
			}
		}

		& > ul {
			padding: 0 1em;
		}

		li {
			margin: 15px 0 15px 20px;
			padding: 5px;

			& > ol,
			& > ul {
				margin-top: 10px;
				padding-left: 10px;
				margin-bottom: -5px;

				& > li:last-child {
					margin-bottom: 0;
				}
			}
		}
		li.active-class > a {
			border-left: var(--heading-border-size) solid var(--accent-color);
			font-weight: bold;
		}

		ul li.active-class > a {
			display: block;
		}

		@function repeat($str, $n) {
			$result: '';
			@for $_ from 0 to $n {
				$result: $result + $str;
			}
			@return $result;
		}

		// Support up to 6 levels of indentation for lists in ToCs
		@for $i from 0 to 5 {
			& > ul #{repeat("> li > ul", $i)} > li.active-class > a {
				$n: 25 + $i * 35;
				margin-left: calc(-#{$n}px - 1em);
				padding-left: calc(#{$n}px + 1em - var(--heading-border-size));
			}

			& > ol #{repeat("> li > ol", $i)} > li.active-class > a {
				$n: 9 + $i * 35;
				margin-left: calc(-#{$n}px - 1em);
				padding-left: calc(#{$n}px + 1em - var(--heading-border-size));
				display: block;
			}
		}
	}
}
